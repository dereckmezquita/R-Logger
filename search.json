[{"path":"https://dereckmezquita.github.io/R-Logger/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dereck Mezquita. Author, maintainer.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mezquita D (2024). Logger: Flexible Customisable Logging System R. R package version 0.0.1, https://github.com/dereckmezquita/R-Logger.","code":"@Manual{,   title = {Logger: Flexible and Customisable Logging System for R},   author = {Dereck Mezquita},   year = {2024},   note = {R package version 0.0.1},   url = {https://github.com/dereckmezquita/R-Logger}, }"},{"path":"https://dereckmezquita.github.io/R-Logger/index.html","id":"r-logger","dir":"","previous_headings":"","what":"Flexible and Customisable Logging System for R","title":"Flexible and Customisable Logging System for R","text":"Simple lightweight logger class R.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/LogLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Log Levels — LogLevel","title":"Log Levels — LogLevel","text":"Defines available log levels Logger class.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/LogLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log Levels — LogLevel","text":"","code":"LogLevel"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/LogLevel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Log Levels — LogLevel","text":"object class list length 3.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger — Logger","title":"Logger — Logger","text":"R6 class flexible logging customizable output.","code":""},{"path":[]},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Logger — Logger","text":"Logger$new() Logger$set_level() Logger$error() Logger$warn() Logger$info() Logger$clone()","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Logger — Logger","text":"Create new Logger object.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$new(   level = LogLevel$INFO,   file_path = NULL,   print_fn = function(x) cat(x, \"\\n\") )"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"level minimum log level output. Default LogLevel$INFO. file_path Character; path file save log entries . Default NULL. print_fn Function; custom print function use console output. accept single character string input. Default uses cat newline.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Logger — Logger","text":"new `Logger` object.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"logger <- Logger$new(level = LogLevel$WARNING, file_path = \"log.txt\")"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-set-level-","dir":"Reference","previous_headings":"","what":"Method set_level()","title":"Logger — Logger","text":"Set minimum log level.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$set_level(level)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"level new minimum log level set.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"logger <- Logger$new() logger$set_level(LogLevel$WARNING)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-error-","dir":"Reference","previous_headings":"","what":"Method error()","title":"Logger — Logger","text":"Log error message.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$error(msg, data = NULL, error = NULL)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"msg Character; error message log. data Optional; additional data include log entry. error Optional; error object include log entry.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"logger <- Logger$new() logger$error(\"An error occurred\", data = list(x = 1), error = simpleError(\"Oops!\"))"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-warn-","dir":"Reference","previous_headings":"","what":"Method warn()","title":"Logger — Logger","text":"Log warning message.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$warn(msg, data = NULL)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"msg Character; warning message log. data Optional; additional data include log entry.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"logger <- Logger$new() logger$warn(\"This is a warning\", data = list(reason = \"example\"))"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-info-","dir":"Reference","previous_headings":"","what":"Method info()","title":"Logger — Logger","text":"Log info message.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$info(msg, data = NULL)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"msg Character; info message log. data Optional; additional data include log entry.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"logger <- Logger$new() logger$info(\"Operation completed successfully\", data = list(duration = 5.2))"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Logger — Logger","text":"objects class cloneable method.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger — Logger","text":"","code":"Logger$clone(deep = FALSE)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger — Logger","text":"deep Whether make deep clone.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/Logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger — Logger","text":"","code":"# Create a basic logger logger <- Logger$new() logger$info(\"This is an info message\") #> 2024-08-03T15:42:36.393Z INFO    This is an info message  logger$warn(\"This is a warning\") #> 2024-08-03T15:42:36.397Z WARNING This is a warning  logger$error(\"This is an error\") #> 2024-08-03T15:42:36.410Z ERROR   This is an error   # Create a logger with custom settings custom_logger <- Logger$new(   level = LogLevel$WARNING,   file_path = tempfile(\"log_\"),   print_fn = message ) custom_logger$info(\"This won't be logged\") custom_logger$warn(\"This will be logged\") #> 2024-08-03T15:42:36.415Z WARNING This will be logged  # Change log level custom_logger$set_level(LogLevel$INFO) custom_logger$info(\"Now this will be logged\") #> 2024-08-03T15:42:36.417Z INFO    Now this will be logged  ## ------------------------------------------------ ## Method `Logger$new` ## ------------------------------------------------  logger <- Logger$new(level = LogLevel$WARNING, file_path = \"log.txt\")  ## ------------------------------------------------ ## Method `Logger$set_level` ## ------------------------------------------------  logger <- Logger$new() logger$set_level(LogLevel$WARNING)  ## ------------------------------------------------ ## Method `Logger$error` ## ------------------------------------------------  logger <- Logger$new() logger$error(\"An error occurred\", data = list(x = 1), error = simpleError(\"Oops!\")) #> 2024-08-03T15:42:36.423Z ERROR   An error occurred #> Data: #> { #>   \"x\": 1 #> } #> Error: #> { #>   \"name\": \"simpleError\", #>   \"message\": \"Oops!\", #>   \"call\": \"NULL\" #> }   ## ------------------------------------------------ ## Method `Logger$warn` ## ------------------------------------------------  logger <- Logger$new() logger$warn(\"This is a warning\", data = list(reason = \"example\")) #> 2024-08-03T15:42:36.425Z WARNING This is a warning #> Data: #> { #>   \"reason\": \"example\" #> }   ## ------------------------------------------------ ## Method `Logger$info` ## ------------------------------------------------  logger <- Logger$new() logger$info(\"Operation completed successfully\", data = list(duration = 5.2)) #> 2024-08-03T15:42:36.427Z INFO    Operation completed successfully #> Data: #> { #>   \"duration\": 5.2 #> }"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/messageParallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Print from parallel forked processes — messageParallel","title":"Print from parallel forked processes — messageParallel","text":"Uses `sprintf` `C` function echo messages back R console parallel computation `future` `future.apply`.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/messageParallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print from parallel forked processes — messageParallel","text":"","code":"messageParallel(...)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/messageParallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print from parallel forked processes — messageParallel","text":"... Character vector messages print.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/messageParallel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print from parallel forked processes — messageParallel","text":"Beware function may consume large amounts resources.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/messageParallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print from parallel forked processes — messageParallel","text":"","code":"messageParallel(\"Send this message back up.\")"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data.frame printout to a string — tableToString","title":"Convert a data.frame printout to a string — tableToString","text":"function captures output printing object data.frame returns single string. particularly useful including tabular data error messages log entries strings.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data.frame printout to a string — tableToString","text":"","code":"tableToString(obj)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data.frame printout to a string — tableToString","text":"obj R object printed captured.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data.frame printout to a string — tableToString","text":"Character string","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a data.frame printout to a string — tableToString","text":"function performs following steps: 1. Converts input object data frame using `.data.frame()`. 2. Prints resulting data.frame. 3. Captures print output using `capture.output()`. 4. Collapses captured output single string newline characters. function particularly useful need include contents table data frame single string, throwing error message creating log entry. allows easily combine textual information tabular data format can printed cohesive message.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/tableToString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data.frame printout to a string — tableToString","text":"","code":"# Create a sample data frame df <- data.frame(a = 1:3, b = letters[1:3])  # Use tableToString to get the output as a string output <- tableToString(df) cat(output) #>   a b #> 1 1 a #> 2 2 b #> 3 3 c  # Example of using tableToString in error handling tryCatch({     # Some operation that might fail     if (sum(df$a) > 5) {         stop(             paste(\"Sum of column 'a' is too high. Current data:\",             tableToString(df))         )   } }, error = function(e) {     message(\"An error occurred: \", e$message) }) #> An error occurred: Sum of column 'a' is too high. Current data:   a b #> 1 1 a #> 2 2 b #> 3 3 c"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"function locates row column coordinates values data.frame satisfy given condition. particularly useful identifying positions specific problematic values large datasets.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"","code":"valueCoordinates(df, value = NA, eq_fun = value_check)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"df data.frame searched. value value search . Default NA. eq_fun function used check equality. take two arguments: current value data.frame `value` parameter. Default internal `eq_fun` function uses `identical()` non-NA values `.na()` NA.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"data.frame two columns: column column numbers specified condition met row row numbers specified condition met returned data.frame sorted first column, row.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"function performs following steps: 1. Creates logical matrix TRUE indicates values meeting specified condition. 2. Finds row column indices TRUE values. 3. Combines indices data.frame. 4. Sorts results column, row. custom equality function provided, function uses internal `eq_fun` checks NA values `.na()` uses `identical()` values.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/valueCoordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Coordinates of Specific Values in a data.frame — valueCoordinates","text":"","code":"# Create a sample data.frame df <- data.frame(   a = c(1, NA, 3),   b = c(NA, 2, NA),   c = c(3, 2, 1) )  # Find coordinates of NA values valueCoordinates(df) #>   column row #> 2      1   1 #> 1      2   2 #> 3      2   3  # Find coordinates of the value 2 valueCoordinates(df, 2) #>   column row #> 1      2   2 #> 2      3   2  # Find coordinates of values greater than 2 valueCoordinates(df, 2, function(x, y) x > y) #>   column row #> 2      1   1 #> 1      3   3  # Find coordinates of values within a range valueCoordinates(df, c(1, 3), function(x, y) x >= y[1] & x <= y[2]) #>   column row #> 1      1   1 #> 5      1   2 #> 3      2   2 #> 4      3   1 #> 2      3   3 #> 6      3   3"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/value_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Equality Function for valueCoordinates — value_check","title":"Default Equality Function for valueCoordinates — value_check","text":"helper function used default equality check valueCoordinates. handles NA values uses identical() non-NA comparisons.","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/value_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Equality Function for valueCoordinates — value_check","text":"","code":"value_check(x, y)"},{"path":"https://dereckmezquita.github.io/R-Logger/reference/value_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Equality Function for valueCoordinates — value_check","text":"x current value data.frame y value compare (`value` parameter valueCoordinates)","code":""},{"path":"https://dereckmezquita.github.io/R-Logger/reference/value_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Equality Function for valueCoordinates — value_check","text":"Logical value indicating whether condition met","code":""}]
